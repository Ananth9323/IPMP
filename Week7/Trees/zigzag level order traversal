/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> v;
        if(!root)return v;
        deque<TreeNode*> dq;
        dq.push_back(root);
        bool flag=false;
        while(dq.size()){
            vector<int> temp;
            if(!flag){
                int size=dq.size();
                for(int i=0;i<size;i++){
                    TreeNode* t=dq.front();
                    dq.pop_front();
                    temp.push_back(t->val);
                    if(t->left){
                        dq.push_back(t->left);
                    }
                    if(t->right){
                        dq.push_back(t->right);
                    }
                }
            }
            else{
                int size=dq.size();
                for(int i=size;i;i--){
                    TreeNode *t=dq.back();
                    dq.pop_back();
                    temp.push_back(t->val);
                    if(t->right){
                        dq.push_front(t->right);
                    }
                    if(t->left){
                        dq.push_front(t->left);
                    }
                }
            }
            v.push_back(temp);
            flag=!flag;
        }
        return v;
    }
};

link:https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/description/
