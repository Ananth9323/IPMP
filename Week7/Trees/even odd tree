class Solution {
public:
    bool isEvenOddTree(TreeNode* root) {
        vector<vector<int>> v;
        if (root==NULL)return true;
        queue<TreeNode*> q;
        q.push(root);
        if(root->val%2==0)return false;
        bool flag=false;
        while (!q.empty()){
            int size= q.size();
            vector<int> temp;
            for (int i=0; i<size; i++){
                TreeNode* ele= q.front();
                q.pop();
                if(!flag){
                    if(!ele->val%2)return false;
                    if(!temp.empty() && ele->val<=temp.back())return false;
                }
                else{
                    if(ele->val%2)return false;
                    if(!temp.empty() && ele->val>=temp.back())return false;
                }
                temp.push_back(ele->val);
                if(ele->left)q.push(ele->left);
                if(ele->right)q.push(ele->right);
            }
            v.push_back(temp);
            flag=!flag;
        }
        return true;
    }
};

link:https://leetcode.com/problems/even-odd-tree/description/
