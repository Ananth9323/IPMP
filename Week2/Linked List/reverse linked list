ListNode* reverseList(ListNode* head) {
        ListNode *prev=NULL, *curr=head, *nxt=NULL;
        while(curr){
            nxt=curr->next;
            curr->next=prev;
            prev=curr;
            curr=nxt;
        }
        head=prev;
        return head;
    }
    
    
    recursive way:
    
    ListNode* reverseList(ListNode* head) {
        if(!(head) || !(head->next))return head;

        ListNode *prev=NULL;
        ListNode *h2=reverseList(head->next);
        head->next->next=head;
        head->next=prev;
        return h2;
    }
    
    link:https://leetcode.com/problems/reverse-linked-list/description/
