class Solution {
public:
    vector<vector<string>> printTree(TreeNode* root) {
        int height1=height(root);
        int m=height1;
        int n=pow(2,m)-1;
        vector<vector<string>> v(m, vector<string>(n,""));
        helper(root,0,0,n-1,v);
        return v;

    }

    void helper(TreeNode *root, int row, int left, int right, vector<vector<string>>& v){
        if(left>right)return;
        int mid=(left+right)/2;
        v[row][mid]=to_string(root->val);
        if(root->left){
            helper(root->left, row+1, left, mid-1, v);
        }
        if(root->right){
            helper(root->right, row+1, mid+1, right, v);
        }
    }

    int height(TreeNode *root){
        if(!root)return 0;
        return 1+max(height(root->left),height(root->right));
    }
};
