/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* pruneTree(TreeNode* root) {
        if(root->val==0 && !helper(root))return NULL;
        solve(root);
        return root;
    }

    void solve(TreeNode* root){
        if(!root)return;
        if(root->left && root->left->val!=1 && !helper(root->left))root->left=NULL;
        if(root->right && root->right->val!=1 && !helper(root->right))root->right=NULL;
        solve(root->left);
        solve(root->right);
    }

    bool helper(TreeNode *root){
        if(!root)return false;
        if(root->left && root->left->val==1 || root->right && root->right->val==1)return true;
        bool lefty=helper(root->left);
        bool righty=helper(root->right);
        return lefty||righty;

    }

    bool isleaf(TreeNode *root){
        return !root->left && !root->right && root;
    }
};
