class Solution {
public:
    vector<vector<int>> intervalIntersection(vector<vector<int>>& f, vector<vector<int>>& s) {
        vector<vector<int>> ans;
        if(s.size()==0){
            return ans;
        }
        if(f.size()==0)return ans;

        int a=f.size();
        int b=s.size();


        int i=0,j=0;
        while(i<a && j<b){
            if(f[i][0]>s[j][1]){j++;continue;}
            if(s[j][0]>f[i][1]){i++;continue;}
            if(f[i][0]>=s[j][0] && f[i][1]<=s[j][1]){
                ans.push_back({f[i][0],f[i][1]});
                i++;
                continue;
            }
            if(f[i][0]<=s[j][0] && f[i][1]>=s[j][1]){
                ans.push_back({s[j][0],s[j][1]});
                j++;
                continue;
            }
            if(f[i][0]>=s[j][0] && f[i][1]>=s[j][1]){
                ans.push_back({f[i][0],s[j][1]});
                
                j++;
                continue;
            }
            if(f[i][0]<=s[j][0] && f[i][1]<=s[j][1]){
                ans.push_back({s[j][0],f[i][1]});
                i++;
                
                continue;
            }
        }
        return ans;
    }
};

link:https://leetcode.com/problems/interval-list-intersections/
